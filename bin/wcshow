#!/usr/bin/env bash

# Пользователь по умолчанию
USER_LOGIN=$USER
# Проекты по умолчанию
PROJECTS="images2+images3+video2+video3+web3+images_touch_phone+video_touch_phone"
SHOW_STATUS=""
blue="\E[0;34m"
green="\E[0;32m"
red="\E[0;31m"
off="\E[0;00m"
format="${blue}%-14s${off} ${green}%-18s${off} %s${red}%s${off} - %s${red}%s${off}\n"

for param in $1 $2 $3 $4
do
    if [[ $param != "" ]]
    then
        if [[ $param == "-h" || $param == "--help" ]]
        then
            echo -e "${green}Usage:${off}"
            echo -e "${blue}wcshow${off} [-s] [yurich] [wc] [images3+video3]"
            echo " login должен быть указан перед wc, порядок остальных параметров не важен."
            echo -e "${green}Options:${off}"
            echo " -s, --status - Запрашивать git status для каждой рабочей копии"
            echo -e "${green}Status:${off}"
            echo -e " ${red}*${off} - Есть незакомиченные изменения"
            echo -e " ${red}!${off} - Есть незапушенные коммиты"
            exit
        fi
        if [[ $param == "-s" || $param == "--status" ]]
        then
            SHOW_STATUS=1
        else
            if [ -d /home/$param/ ]
            then
                USER_LOGIN=$param
            else
                if [ -d /home/$USER_LOGIN/$param ]
                then
                    SHOW_STATUS=1
                    WC_NAME=$param
                else
                    PROJECTS=$param
                fi
            fi
        fi
    fi
done;

PROJECTS=${PROJECTS//+/ }

USER_HOME="/home/$USER_LOGIN/"

function get_git_status()
{
    if [[ $SHOW_STATUS ]]
    then
        status=`git status --porcelain 2> /dev/null`
        if [[ $status != "" ]]
        then
            echo "*"
        fi
    fi
}

function get_git_diff_remote()
{
    if [[ $SHOW_STATUS ]]
    then
        status=`git log origin/$1..$1 --oneline | wc -l | tr -d \'[:blank:]\' 2> /dev/null`
        local result=''
        if [[ $status != "0" ]]
        then
            echo "!"
        fi
    fi
}

function get_git_branch()
{
    local ref=$(git symbolic-ref HEAD 2> /dev/null)

    echo "${ref#refs/heads/}"
}

cd $USER_HOME > /dev/null

if [[ $WC_NAME != "" ]]
then
    ALL_DIRECTORIES="$WC_NAME"
else
    ALL_DIRECTORIES=`ls -d */`
fi

for dir in ${ALL_DIRECTORIES//\//} # Remove /
do

    cd $USER_HOME$dir/ 2> /dev/null
    for project in $PROJECTS
    do
        if [ -d $project ]
        then
            cd $project/ 2> /dev/null
            branch1=`get_git_branch`
            status1="`get_git_status``get_git_diff_remote $branch1 2> /dev/null`"
            if [ -d common/islands ]
            then
                cd common/islands/ 2>/dev/null
                branch2=`get_git_branch`
                status2="`get_git_status``get_git_diff_remote $branch2 2> /dev/null`"
            fi
            printf "$format" "$dir" "$project" "$branch1" "$status1" "$branch2" "$status2"
            #echo -e "\E[0;36m ${dir}\E[0;39m: ${project}: ${branches}"
            cd ${USER_HOME}$dir 2> /dev/null
        fi
    done;

    cd $USER_HOME

done;
